#summary Converted POD documentation.
#labels ManPage
_This page was generated from POD using [http://code.google.com/p/pod2gcw pod2gcw] and is not intended for editing._

==NAME==
map_data.pl

A script to map data relative to and flanking a genomic feature

==SYNOPSIS==
{{{
 map_data.pl --db <database> --feature <name> --out <file> [--options]
 map_data.pl --in <in_filename> --out <out_filename> [--options]
  }}}
{{{
  Options:
  --db <name|file.gff3>
  --feature [type, type:source]
  --in <filename> 
  --out <filename>
  --data <dataset_name | filename>
  --method [mean|median|min|max|stddev|sum]
  --value [score|count|length]
  --win <integer>
  --num <integer>
  --pos [5|3|m]
  --strand [sense|antisense|all]
  --set_strand
  --(no)sum
  --(no)smooth
  --(no)log
  --help
}}}
==OPTIONS==
The command line flags and descriptions:

{{{
}}}
__--db <**name|file.gff3>

__
  Specify the name of the !BioPerl** !SeqFeature**::Store database to use as source. Alternatively, a single GFF3 file may be loaded into a in-memory database. Specifying the database is required for new feature data files. For pre-existing input data files, this value may be obtained from the input file metadata. However, if provided, it overrides the database listed in the file; this is useful for collecting data from multiple databases.
__
  __
__--out <**filename>

__
  Specify the output file name. Required for new files; otherwise,  input files will be overwritten unless specified.
__
  __
__--in <**filename>

__
  Specify the filename of a data table containing the list of  features to map nucleosomes around. The file must be in the 'tim_data' format and specify a feature to use. If an input  file is not specified, then a new list of features will be  generated from the database.
__
  __
__--feature `[`type, type:source`]`

__
  Specify the type of feature to map data around. The feature may be  listed either as GFF type or GFF type:source. The list  of features will be automatically generated from the database.
__
  __
  This is optional if the features are defined in the input file.
__
  __
__--data <**dataset_name | filename>

__
  Specify the name of the data set from which you wish to  collect data. If not specified, the data set may be chosen interactively from a presented list. Other features may be collected, and should be specified using the type  (GFF type:source), especially when collecting alternative data values.  Alternatively, the name of a data file may be provided. Supported  file types include !BigWig** (.bw), !BigBed** (.bb), or single-end Bam  (.bam). The file may be local or remote.
__
  __
__--method `[`mean|median|min|max|stddev|sum`]`

__
  Specify the method of combining multiple values within each window. The mean,  median, minimum, maximum, standard deviation, or sum of the values may be  reported. The default value is mean for score and length values, or sum for  count values.
__
  __
__--value `[`score|count|length`]`

__
  Optionally specify the type of data value to collect from the dataset or  data file. Three values are accepted: score, count, or length. The default  value type is score. Note that some data sources only support certain  types of data values. Wig and !BigWig** files only support score and count;  !BigBed** and database features support count and length and optionally  score; Bam files support basepair coverage (score), count (number of  alignments), and length.
__
  __
__--win <**integer>

__
  Specify the window size. Default 50
__
  __
__--num <**integer>

__
  Specify the number of windows on either side of the feature position  (total number will be 2 x `[`num`]`). Default 20
__
  __
__--pos `[`5|3|m`]`

__
  Indicate the relative position of the feature around which the  data is mapped. Three values are accepted: "5" indicates the  5' prime end is used, "3" indicates the 3' end is used, and "m" or "1" indicates the middle of the feature is used. The default is to  use the 5' end, or the start position of unstranded features.  If the feature "tts" is selected above, the 3' end is  automatically selected.
__
  __
__--strand `[`sense|antisense|all`]`

__
  Specify whether stranded data should be collected for each of the  datasets. Either sense or antisense (relative to the feature) data  may be collected. The default value is 'all', indicating all  data will be collected.
__
  __
__--set_strand

__
  For features that are not inherently stranded (strand value of 0),  impose an artificial strand for each feature (1 or -1). This will  have the effect of enforcing a relative orientation for each feature,  or to collected stranded data. This requires the presence a  column in the input data file with a name of "strand". Hence, it  will not work with newly generated datasets, but only with input  data files. Default is false.
__
  __
__--(no)sum

__
  Indicate that the data should be averaged across all features at each position, suitable for graphing. A separate text file will  be written with the suffix '`_`summed' with the averaged data.  Default is true.
__
  __
__--(no)smooth

__
  Indicate that windows without values should (not) be interpolated from neighboring values.
__
  __
__--(no)log

__
  Dataset values are (not) in log2 space and should be treated  accordingly. Output values will be in the same space.
__
  __
__--help

__
  Display this help
__
  __
{{{
}}}
==DESCRIPTION==
This program will map data around a genomic feature. Features may include the transcription start site (TSS) of a transcript, tRNA gene, or some other genomic feature. The data is collected in a series of windows flanking the feature start, end, or midpoint position. The number and size of windows are specified on the command line, or the program will default to 20 windows (on either side of the feature, 40 total) of 50 bp size. These default window settings corresponds to 1 kb on either side of the feature. Windows without a value may be interpolated (smoothed) from neigboring  values, if available.

The default value that is collected is a dataset score (e.g. microarray  values). However, other values may be collected, including 'count' or  'length'. Use the --method argument to collect alternative values.

The program writes out a tim data formatted text file.

{{{
}}}
==AUTHOR==
{{{
 Timothy J. Parnell, PhD
 Howard Hughes Medical Institute
 Dept of Oncological Sciences
 Huntsman Cancer Institute
 University of Utah
 Salt Lake City, UT, 84112
}}}
This package is free software; you can redistribute it and/or modify it under the terms of the GPL (either version 1, or at your option, any later version) or the Artistic License 2.0.

{{{
}}}
{{{
}}}
{{{
}}}
{{{
}}}
{{{
}}}
