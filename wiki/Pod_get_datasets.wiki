#summary Converted POD documentation.
#labels ManPage
_This page was generated from POD using [http://code.google.com/p/pod2gcw pod2gcw] and is not intended for editing._

==NAME==
get_datasets.pl

A script to collect genomic datasets from a Bioperl !SeqFeature**::Store db.

==SYNOPSIS==
get_datasets.pl `[`--options...`]` `[`<**filename>`]`

{{{
  Options:
  --new
  --in <filename>
  --out filename
  --db <name|file.gff3>
  --feature <type | type:source | alias, ...>
  --dataset <none | name, ...>
  --dataf <file1,file2,...>
  --method [mean|median|stddev|min|max|range|sum]
  --value [score|count|length]
  --(no)log
  --strand [all|sense|antisense]
  --exons
  --extend <integer>
  --start <integer>
  --stop <integer>
  --fstart <decimal>
  --fstop <decimal>
  --limit <integer>
  --pos [5|3|m]
  --win <integer>
  --step <integer>
  --set_strand
  --(no)gz
  --help
}}}
{{{
}}}
==OPTIONS==
The command line flags and descriptions:

__--new

__
  Generate a new table of features. Overrides any specified input file.
__
  __
__--in <**filename>

__
  Specify the file name of a previously generated feature dataset. Required unless "--new" is specified. It should be in the tim data format that is generated by this program and others, although other tab-delimited text data formats may be usable. See the file description below and in `tim_db_helper.pm`.
__
  __
__--out <**filename>

__
  Specify the output file name. Required for new feature tables; optional for  current files. If this is argument is not specified then the input file is  overwritten.
__
  __
__--db <**name|file.gff3>

__
  Specify the name of the !BioPerl** !SeqFeature**::Store database to use as source. Alternatively, a single GFF3 file may be loaded into a in-memory database. Specifying the database is required for new feature data files. For pre-existing input data files, this value may be obtained from the input file metadata. However, if provided, it overrides the database listed in the file; this is useful for collecting data from multiple databases.
__
  __
__--feature <**type | type:source | alias, ...>

__
  Specify the type of feature from which to collect values. This is required  for new feature tables. Two types of values may be passed: either a specific  feature type present in the database, or an alias to one or more features.  The feature may be specified as either type or type:source. Aliases are  specified in the `biotoolbox.cfg` file, and provide a shortcut to a  list of one or more features. More than feature may be included as a  comma-delimited list (no spaces). To collect genomic intervals (or regions)  simply specify 'genome' as the feature type.
__
  __
__--dataset <**none | name, ...>

__
  Provide the name of the dataset to collect the values. Use this argument  repeatedly for each dataset to be collected. Two or more datasets may be merged into one by delimiting with an "&" (no spaces!). If the dataset is not  specified on the command line, then the program will interactively present a  list of datasets from the database to select. To force the program to  simply write out the list of collected features without collecting data,  provide the dataset name of "none".
__
  __
__--dataf <**file1,file2,...>

__
  Alternative to using datasets stored in the database, a data file may be directly referenced and used in the collection of score values. Only data formats which directly support chromosome:start..stop searches are supported; these currently include !BigWig** (.bw), !BigBed** (.bb), and single-end Bam (.bam) files. Multiple data files may be specified as a comma delimited list. Merging files as a single source is also supported using a "&". Remote files should also be accessible by prefixing with the appropriate transfer protocol (http: or ftp:).
__
  __
__--method `[`sum|mean|median|stddev|min|max|range`]`

__
  Specify the method for combining all of the dataset values within the  genomic region of the feature. Accepted values include:
__
  __
{{{
  - sum
  - mean        (default)
  - median
  - stddev      Standard deviation of the population (within the region)
  - min
  - max
  - range       Returns 'min-max'
  }}}
__--value `[`score|count|length`]`

__
  Optionally specify the type of data value to collect from the dataset or  data file. Three values are accepted: score, count, or length. The default  value type is score. Note that some data sources only support certain  types of data values. Wig and !BigWig** files only support score and count;  !BigBed** and database features support count and length and optionally  score; Bam files support basepair coverage (score), count (number of  alignments), and length.
__
  __
__--(no)log

__
  Indicate the dataset is (not) in log2 space. The log2 status of the dataset is  critical for accurately mathematically combining the dataset values in the  feature's genomic region. It may be determined automatically if the dataset  name includes the phrase "log2".
__
  __
__--strand `[`all | sense | antisense`]`

__
  Specify whether stranded data should be collected for each of the  datasets. Either sense or antisense (relative to the feature) data  may be collected. Note that strand is not (currently) supported with  coverage (score) from a BAM file, but count is. The default value is  'all', indicating all data will be collected.
__
  __
__--exons

__
  Optionally indicate that data should be collected only over the exon  subfeatures of a gene or transcript, rather than the entire gene.  Subfeatures with a primary_tag of exon are preferentially taken. If exons  are not defined, then CDS and UTR subfeatures are used, or the entire  gene or transcript if no appropriate subfeatures are found. Note that the  data collection method is applied twice, once for each subfeature, and then  again on all of the subfeature combined values. Also note that the options  extend, start, stop, fstart, and fstop are ignored. Default is false.
__
  __
__--extend <**integer>

__
  Optionally specify the bp extension that will be added to both sides of the  feature's region.
__
  __
__--start <**integer>

__
  Optionally specify the start position of the region to collect values relative  to the feature start. Prefix a negative sign to specify  an upstream position. Specify a negative value on the command line with an  equals sign, e.g. "--start=-300'. Must be combined with "--stop".
__
  __
__--stop <**integer>

__
  Optionally specify the stop position of the region to collect values relative  to the feature start. Must be combined with "--start".
__
  __
__--fstart <**number>

__
  Optionally specify the fractional start position of the region to collect  values relative to the feature start (or end if specified). The fraction is  based on the feature's region length. The fraction should be presented as a  decimal number, e.g. 0.25. Prefix a negative sign to specify an upstream  position. Must be combined with "--fstop".
__
  __
__--fstop <**number>

__
  Optionally specify the fractional stop position of the region to collect  values relative to the feature start (or end if specified). The fraction is  based on the feature's region length. The fraction should be presented as a  decimal number, e.g. 0.25. A value > 1 would include the region downstream  of the feature. Must be combined with "--fstart".
__
  __
__--limit <**integer>

__
  Optionally specify the minimum size limit for subfractionating a feature's  region. Used in combination with fstart and fstop to prevent taking a  subregion from a region too small to support it. The default is 1000 bp.
__
  __
__--pos `[`5 | 3 | m`]`

__
  Indicate the relative position of the feature with which the  data is collected when combined with the "start" and "stop" or "fstart"  and "fstop" options. Three values are accepted: "5" indicates the  5' prime end is used, "3" indicates the 3' end is used, and "m" or "1"  indicates the middle of the feature is used. The default is to  use the 5' end, or the start position of unstranded features.
__
  __
__--win <**integer>

__
  When generating a new genome interval list (feature type 'genome'),  optionally specify the window size. The default size is defined in the  configuration file, biotoolbox.cfg.
__
  __
__--step <**integer>

__
  Optionally indicate the step size when generating a new list of intervals  across the genome. The default is equal to the window size.
__
  __
__--set_strand

__
  For features that are not inherently stranded (strand value of 0),  impose an artificial strand for each feature (1 or -1). This will  have the effect of enforcing a relative orientation for each feature,  or to collected stranded data. This requires the presence of a  column in the input data file with a name of "strand". Hence, it  will not work with newly generated datasets, but only with input  data files. Default is false.
__
  __
__--(no)gz

__
  Indicate whether the output file should (not) be compressed by gzip.  If compressed, the extension '.gz' is appended to the filename. If a compressed  file is opened, the compression status is preserved unless specified otherwise.
__
  __
__--help

__
  Display the complete POD documentation for this program.
__
  __
==DESCRIPTION==
This program will collect dataset values from a Bioperl !SeqFeature**::Store  formatted database. It will generate a list of genomic features or intervals, collect values from  one or more datasets for each feature, and write out a data file. Previous  data files may be re-loaded and additional datasets added to the list of  features.

At each feature or interval, multiple data points within the genomic segment  are combined mathematically and reported as a single value for the feature.  The method for combining datapoints may be specified; the default method is  the mean of all datapoints.

Datasets in the database to be collected may be chosen interactively from a list  for convenience. Alternatively, the datasets may be specified upon execution  at the command line. The program is designed to be run completely without  interaction, allowing for convenient usage within a shell script.

The output file is a standard tim data formatted file, a tab delimited  file format with each row a genomic feature and each column a dataset.  Metadata regarding the datasets are stored in comment lines at the beginning  of the file. The file may be gzipped.

==AUTHOR==
{{{
 Timothy J. Parnell, PhD
 Howard Hughes Medical Institute
 Dept of Oncological Sciences
 Huntsman Cancer Institute
 University of Utah
 Salt Lake City, UT, 84112
}}}
This package is free software; you can redistribute it and/or modify it under the terms of the GPL (either version 1, or at your option, any later version) or the Artistic License 2.0.

{{{
}}}
