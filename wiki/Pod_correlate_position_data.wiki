#summary Converted POD documentation.
#labels ManPage
_This page was generated from POD using [http://code.google.com/p/pod2gcw pod2gcw] and is not intended for editing._

==NAME==
correlate_position_data.pl

A script to calculate correlations between two datasets along the length of a feature.

==SYNOPSIS==
correlate_position_data.pl `[`--options`]` <**filename>

{{{
  Options:
  --in <filename>
  --out <filename> 
  --db <name | filename>
  --ddb <name | filename>
  --ref <type | filename>
  --test <type | filename>
  --shift
  --radius <integer>
  --pos [5 | m | 3]
  --norm [rank | sum ]
  --force_strand
  --(no)interpolate
  --gz
  --version
  --help
}}}
==OPTIONS==
The command line flags and descriptions:

__--in <**filename>

__
  Specify the input file of features. The features may be comprised of  name and type, or chromosome, start, and stop. Strand information is  optional, but is respected if included. A feature list may be  generated with the program _*_get_features.pl_*_. The file may be  compressed with gzip.
__
  __
__--out <**filename>

__
  Specify the output filename. By default it rewrites the input file.
__
  __
__--db <**name | filename>

__
  Specify the !BioPerl** database that contains the features listed in the  input file and potentially the reference and test datasets. A  Bio::DB::!SeqFeature**::Store database is typically used for  storing annotation. If genomic coordinates are provided instead, then  any database or bigFile may be provided. The default database is  obtained from the metadata of the input file.
__
  __
__--ddb <**name | filename>

__
  Optionally specify an alternative !BioPerl** database or !BigWigSet** directory  from which the reference and test datasets may be obtained.
__
  __
__--ref <**type | filename>

__
__--test <**type | filename>

__
  Define both the reference and test datasets with which to compare and  correlate. These may be GFF type or name in a database or !BigWigSet**, or  they may be a !BigWig** or even Bam file. Both options are required. If  not provided, they may be interactively chosen from the database.
__
  __
__--shift

__
  Optionally specify whether an optimal shift should be calculated that  would result in a better Pearson correlation value. The default is  false.
__
  __
__--radius <**integer>

__
  Define the radius in basepairs around a reference point to determine  the window size for the correlation analysis. This value is required  when calculating an optimal shift (--shift option). The default is to  take the length of the feature as the window for calculating the  correlation.
__
  __
__--pos `[`5 | m | 3`]`

__
  Indicate the relative position of the feature to be used as the  reference point around which the window (determined by the radius  value) for collecting data will be centered. Three values are  accepted: "5" indicates the 5' prime end is used, "3" indicates the  3' end is used, and "m" indicates the middle of the feature is used.  The default is to use the midpoint.
__
  __
__--norm `[`rank | sum`]`

__
  Optionally define a method of normalizing the scores between the  reference and test data sets prior to calculating the correlation.  Two methods are currently supported: "rank" converts all values  to rank values (the mean rank is reported for identical values)  and essentially calculating a Spearman's rank correlation, while  "sum" scales all values so that the absolute sums are identical.  Normalization occurs after missing or zero values are interpolated.  The default is no normalization.
__
  __
__--force_strand

__
  If enabled, a strand orientation will be enforced when determining the  optimal shift. This does not affect the correlation calculation, only  the direction of the reported shift. This requires the presence of a  data column in the input file with strand information. The default is  no enforcement of strand.
__
  __
__--(no)interpolate

__
  Interpolate missing or zero positioned values in each window for both  reference and test data. This will improve the Pearson correlation  values, especially for sparse data. Enabled by default.
__
  __
__--gz

__
  Specify whether (or not) the output file should be compressed with gzip.
__
  __
__--version

__
  Print the version number.
__
  __
__--help

__
  Display this POD documentation.
__
  __
==DESCRIPTION==
This program will calculate a Pearson linear correlation coefficient (r value)  between the positioned scores (occupancy) of two datasets over a window  from an annotated feature or chromosomal segment. This will determine  whether the positions or distribution of scores across the window vary  between two different data sets: a test dataset and a reference dataset.  The original implementation of this program is to compare nucleosome  occupancy differences between two datasets and identify shifts in position.

By default, the correlation is determined between the data points  collected over the entire length of the feature. Alternatively, a  radius and reference point (default is midpoint) may be provided  that sets the window for collecting scores and calculating a correlation.

To ensure a more reliable Pearson value, missing values or values of  zero are interpolated from neighboring values, when possible. Also,  values may be normalized using one of three methods. The values may be  converted to rank positions (compare to Kendall's tau), or scaled such  that the absolute sum or median values are equal.

In addition to calculating a correlation coefficient, an optimal shift  may also be calculated. This essentially shifts the data, 1 bp at a time,  in order to identify a shift that would produce a higher correlation.  The window is shifted from -2 radius to +2 radius relative to the  reference point, and the highest correlation is reported along with the  shift value that generated it.

==AUTHOR==
{{{
 Timothy J. Parnell, PhD
 Dept of Oncological Sciences
 Huntsman Cancer Institute
 University of Utah
 Salt Lake City, UT, 84112
}}}
This package is free software; you can redistribute it and/or modify it under the terms of the GPL (either version 1, or at your option, any later version) or the Artistic License 2.0.

