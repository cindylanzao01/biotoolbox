#summary Converted POD documentation.
#labels ManPage
_This page was generated from POD using [http://code.google.com/p/pod2gcw pod2gcw] and is not intended for editing._

==NAME==
get_relative_data.pl

A script to collect data in bins around a relative position.

==SYNOPSIS==
get_relative_data.pl --db <**database> --feature <**name> --out <**file> `[`--options`]`

get_relative_data.pl --in <**in_filename> --out <**out_filename> `[`--options`]`

{{{
  Options:
  --db <name|file.gff3>
  --ddb <name|file.gff3>
  --feature [type, type:source]
  --in <filename> 
  --out <filename>
  --data <dataset_name | filename>
  --method [mean|median|min|max|stddev|sum|rpm]
  --value [score|count|length]
  --win <integer>
  --num <integer>
  --pos [5|3|m]
  --strand [sense|antisense|all]
  --force_strand
  --avoid
  --long
  --(no)sum
  --smooth
  --log
  --gz
  --version
  --help
}}}
==OPTIONS==
The command line flags and descriptions:

__--db <**name | filename>

__
  Specify the name of a !BioPerl** database from which to obtain the  annotation, chromosomal information, and/or data. Typically a  Bio::DB::!SeqFeature**::Store database schema is used, either from a  relational database, SQLite file, or a single GFF3 file to be loaded  into memory. Alternatively, a !BigWigSet** directory, or a single !BigWig**,  !BigBed**, or Bam file may be specified.
__
  __
  A database is required for generating new files. When generating a new  genome interval file, a bigFile or Bam file listed as a data source  will be adopted as the database.
__
  __
  For input files, the database name may be obtained from the file  metadata. A different database may be specified from that listed in  the metadata when a different source is desired.
__
  __
__--ddb <**name | filename>

__
  Optionally specify the name of an alternate data database from which  the data should be collected, separate from the primary annotation  database. The same options apply as to the --db option.
__
  __
__--out <**filename>

__
  Specify the output file name. Required for new files; otherwise,  input files will be overwritten unless specified.
__
  __
__--in <**filename>

__
  Specify an input file containing either a list of database features or  genomic coordinates for which to map data around. The file should be a  tab-delimited text file, one row per feature, with columns representing  feature identifiers, attributes, coordinates, and/or data values. The  first row should be column headers. Bed files are acceptable, as are  text files generated with other biotoolbox programs.
__
  __
__--feature `[`type, type:source`]`

__
  Specify the type of feature to map data around. The feature may be  listed either as GFF type or GFF type:source. The list  of features will be automatically generated from the database.  This is only required when an input file is not specified.
__
  __
__--data <**dataset_name | filename>

__
  Specify the name of the data set from which you wish to  collect data. If not specified, the data set may be chosen interactively from a presented list. Other features may be collected, and should be specified using the type  (GFF type:source), especially when collecting alternative data values.  Alternatively, the name of a data file may be provided. Supported  file types include !BigWig** (.bw), !BigBed** (.bb), or single-end Bam  (.bam). The file may be local or remote.
__
  __
__--method `[`mean|median|min|max|stddev|sum|rpm`]`

__
  Specify the method of combining multiple values within each window. The mean,  median, minimum, maximum, standard deviation, or sum of the values may be  reported. The default value is mean for score and length values, or sum for  count values.
__
  __
__--value `[`score|count|length`]`

__
  Optionally specify the type of data value to collect from the dataset or  data file. Three values are accepted: score, count, or length. Note that  some data sources only support certain types of data values. Wig and  !BigWig** files only support score and count; !BigBed** database features  support count and length and optionally score; Bam files support basepair  coverage (score), count (number of alignments), and length. The default  value type is score.
__
  __
__--win <**integer>

__
  Specify the window size. The default is 50 bp.
__
  __
__--num <**integer>

__
  Specify the number of windows on either side of the feature position  (total number will be 2 x `[`num`]`). The default is 20, or 1 kb on either  side of the reference position if the default window size is used.
__
  __
__--pos `[`5|3|m`]`

__
  Indicate the relative position of the feature around which the  data is mapped. Three values are accepted: "5" indicates the  5' prime end is used, "3" indicates the 3' end is used, and "m" or "4" indicates the middle of the feature is used. The default is to  use the 5' end, or the start position of unstranded features.
__
  __
__--strand `[`sense|antisense|all`]`

__
  Specify whether stranded data should be collected for each of the  datasets. Either sense or antisense (relative to the feature) data  may be collected. The default value is 'all', indicating all  data will be collected.
__
  __
__--force_strand

__
  For features that are not inherently stranded (strand value of 0) or that you want to impose a different strand, set this option when collecting stranded data. This will reassign the specified strand for each feature regardless of its original orientation. This requires the presence of a "strand" column in the input data file. This option only works with input file lists of database features, not defined genomic regions (e.g. BED files). Default is false.
__
  __
__--avoid

__
  Indicate whether features of the same type should be avoided when  calculating values in a window. Each window is checked for  overlapping features of the same type; if the window does overlap  another feature of the same type, no value is reported for the  window. The default is false (return all values regardless of  overlap).
__
  __
__--long

__
  Indicate that the dataset from which scores are collected are  long features (counting genomic annotation for example) and not point  data (microarray data or sequence coverage). Normally long features are  only recorded at their midpoint, leading to inaccurate representation at  some windows. This option forces the program to collect data separately  at each window, rather than once for each file feature or region and  subsequently assigning scores to windows. Execution times may be  longer than otherwise. Default is false.
__
  __
__--(no)sum

__
  Indicate that the data should be averaged across all features at each position, suitable for graphing. A separate text file will  be written with the suffix '`_`summed' with the averaged data.  Default is true (sum).
__
  __
__--smooth

__
  Indicate that windows without values should (not) be interpolated from neighboring values. The default is false (nosmooth).
__
  __
__--log

__
  Dataset values are (not) in log2 space and should be treated  accordingly. Output values will be in the same space. The default is  false (nolog).
__
  __
__--gz

__
  Specify whether (or not) the output file should be compressed with gzip.
__
  __
__--version

__
  Print the version number.
__
  __
__--help

__
  Display this help
__
  __
==DESCRIPTION==
This program will collect data around a relative coordinate of a genomic  feature or region. The data is collected in a series of windows flanking the  feature start (5' position for stranded features), end (3' position), or  the midpoint position. The number and size of windows are specified via  command line arguments, or the program will default to 20 windows on both  sides of the relative position (40 total) of 50 bp size, corresponding to  2 kb total (+/- 1 kb). Windows without a value may be interpolated  (smoothed) from neigboring values, if available.

The default value that is collected is a dataset score (e.g. microarray  values). However, other values may be collected, including 'count' or  'length'. Use the --method argument to collect alternative values.

Stranded data may be collected. If the feature does not have an inherent  strand, one may be specified to enforce stranded collection or a particular  orientation.

When features overlap, or the collection windows of one feature overlaps  with another feature, then data may be ignored and not collected (--avoid).

The program writes out a tim data formatted text file. It will also  generate a '`*_`summed.txt' file, in which each the mean value of all  features for each window is generated and written as a data row. This  summed data may be graphed using the biotoolbox script [Pod_graph_profile_pl graph_profile.pl]  or merged with other summed data sets for comparison.

==AUTHOR==
{{{
 Timothy J. Parnell, PhD
 Howard Hughes Medical Institute
 Dept of Oncological Sciences
 Huntsman Cancer Institute
 University of Utah
 Salt Lake City, UT, 84112
}}}
This package is free software; you can redistribute it and/or modify it under the terms of the GPL (either version 1, or at your option, any later version) or the Artistic License 2.0.

