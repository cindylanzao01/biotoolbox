#summary The ReadMe file for biotoolbox.
#labels Featured 

=README for BioToolBox=

==Description==

These are a collection of various perl script programs for processing, converting, analyzing, and manipulating genomic data and/or features. These programs include the following capabilities
	
	* Tools for converting data formats between popular formats, including GFF3, wig, bed, BAM, bigWig, bigBed, and Bar
	* Collecting data relative to any annotated genomic feature
	* Manipulation and analysis of collected data
	* Generating simple graphs of collected data
	* Processing raw microarray files
	* Simple processing of Next Generation Sequencing alignment files
	* Precise mapping of nucleosomes from paired-end sequencing

==Installation==

===Platform===
The programs have been developed and used on Mac OS X versions 10.5 through 10.7. The programs should work on any sane unix-like environment, including Linux; Microsoft Windows compatability is not tested nor guaranteed.

===Perl===
A working Perl environment is, of course, also required, and usually present in virtually every unix-like operating system distribution. Perl versions 5.10 and 5.12 have been tested. 64-bit executable is desireable, but not required, if only because some of the data files can get particularly large, leading to out-of-memory errors with 32-bit Perl.

===Perl Module Dependencies===
Several different Perl modules are required for specific programs to work, most notably BioPerl, among a few others.

To check for these dependencies, run the script [Pod_check_dependencies check_dependencies.pl] located in the biotoolbox root directory. The script will helpfully assist in installing or upgrading missing or out-of-date modules through CPAN, with only one exception. Depending upon your installation, you may need to execute with administrative privelages: run `sudo check_dependencies.pl` and enter the password.

Note that not all of the modules are required. The best way to find out if a dependency is required is to try running the desired script. Perl will appropriately complain if it can't find the module.

===No install===
There is no installation script or compilation required. The scripts are designed to be run as is from the scripts directory. Biotoolbox-specific libraries are included in the lib directory and should be automatically found if the directory structure is maintained. The biotoolbox libraries were not intended for general consumption (they do not have a friendly object-oriented API), but they are fully documented in case someone dares to use them.

For those who need additional guidance in setting up their system, you can check out the [BioToolBoxSetup BioToolBox setup guide].

==Usage==

===Configuration===
There is a configuration file that may be customized for your particular installation. The default file is `biotoolbox.cfg`. It is a simple INI-style file that is used to set up database connection profiles, feature aliases, helper application locations, etc. The file is intended to be edited by users. More documentation can be found within the file itself.

There are three locations where the file may be stored:
	# in the biotoolbox root directory
	# in the user's home root directory
	# a custom location defined by the environment variable 'BIOTOOLBOX'.

===Execution===
All biotoolbox scripts are designed to be run from the command line or executed from another script. Some programs, for example [Pod_manipulate_datasets manipulate_datasets.pl], also provide an interactive interface to allow for spontaneous work or when the exact index number or name of the dataset in the file or database is not immediately known.

===Help===
All scripts require command line options for execution. Executing the program without any options will present a synopsis of the options that are available. Most programs also have a `--help` option, which will display detailed information about the program and execution (usually by displaying the internal POD). The options are given in the long format (`--help`, for example), but may be shortened to single letters if the first letter is unique (`-h`, for example).

===File Formats===
Many of the programs are designed to input and output a file format referred to in colloquial tems as a 'tim data format'. This is merely a tabbed-delimited text format (unix line endings), where the rows represent genomic features, bins, etc. and the columns represent descriptive information and data. The first line in the table are the column headings.

At the beginning of the file are metadata lines, prefixed by a `#`, which describe the content in each column using a simple key=value system. This metadata is useful to describe how and where the data was obtained, and what format it is in, for example log2. This frees up having to cram all the metadata into the filename. The metadata lines are dispensible in most cases, and can be safely deleted before importing the file into another program, such as Excel. More detailed information can be found [TimDataFormat here].

==Updates and Fixes==

The biotoolbox scripts are under continual development by the author. The latest distribution may be downloaded from the project [http://code.google.com/p/biotoolbox/ website]. 

The latest bugfixes and updates may also be obtained through SVN.

Please contact the author for bugs. Feature requests are also accepted, within time constraints. Contact information is at the project website.

==Online Documentation==

	* [BioToolBoxSetUp Setting] up a computer for BioToolBox
	
	* Setting up [SetupForMacOSX Mac OS X] for bioinformatics
	
	* Up to date list of BioToolBox [ProgramList programs]
	
	* Setting up a Bio::DB::SeqFeature::Store [LoadingDatabase database]
	
	* Description of supported data [DataFileFormats file formats]
	
	* Example Data [ExampleFeatureDataCollection collection]
	
	* Example working with [ExampleNextGenerationSequencing Next Generation Sequencing] Data
	
	* Explanation of the text data [TimDataFormat report format]
	
	* [MappingSNPs Mapping SNPs]

